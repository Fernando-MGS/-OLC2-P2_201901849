#include <stdio.h>
#include <math.h>
float HEAP[82000];
float STACK[82000];
float P;
float H;
float t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;

void proc_divZero(){
printf("%c",77);
printf("%c",97);
printf("%c",116);
printf("%c",104);
printf("%c",69);
printf("%c",114);
printf("%c",114);
printf("%c",111);
printf("%c",114);
printf("%c",10);
return;
}
void proc_printString(){
t5=P+1;
t6=STACK[(int)t5];
L7:
t7=HEAP[(int)t6];
if(t7!=-1) goto L8;
goto L9;
L8:
printf("%c",(int)t7);
t6=t6 + 1;
goto L7;
L9:
return;
}


void main(){
//--------------INICIO DE DECLARACION--------x1
STACK[(int)P]=15;
P=P+1;
//------FIN DE DECLARACION--------x1
//--------==
//INICIO DE LLAMADAx1
t2 =  STACK[0] ;
if(2!=0) goto L0;
proc_divZero();
t1=0;
goto L1;
L0:
t1=fmod(t2,2);
L1:
if (t1==0) goto L2;
goto L3;

//INICIO DE IF PRIMARIO
L2:

//INICIO DE PRINT
//INICIO DE STRING
t3=H;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=110;
H=H+1;
HEAP[(int)H]=117;
H=H+1;
HEAP[(int)H]=109;
H=H+1;
HEAP[(int)H]=101;
H=H+1;
HEAP[(int)H]=114;
H=H+1;
HEAP[(int)H]=111;
H=H+1;
HEAP[(int)H]=80;
H=H+1;
HEAP[(int)H]=97;
H=H+1;
HEAP[(int)H]=114;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=105;
H=H+1;
HEAP[(int)H]=110;
H=H+1;
HEAP[(int)H]=103;
H=H+1;
HEAP[(int)H]=114;
H=H+1;
HEAP[(int)H]=101;
H=H+1;
HEAP[(int)H]=115;
H=H+1;
HEAP[(int)H]=111;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=97;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=105;
H=H+1;
HEAP[(int)H]=102;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=118;
H=H+1;
HEAP[(int)H]=101;
H=H+1;
HEAP[(int)H]=114;
H=H+1;
HEAP[(int)H]=100;
H=H+1;
HEAP[(int)H]=97;
H=H+1;
HEAP[(int)H]=100;
H=H+1;
HEAP[(int)H]=101;
H=H+1;
HEAP[(int)H]=114;
H=H+1;
HEAP[(int)H]=111;
H=H+1;
HEAP[(int)H]=44;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t3==-1) goto L5;
P=P+1;
t4=P+1;
STACK[(int)t4] =t3;
proc_printString();
P=P-1;
goto L6;
L5:
L6:

//INICIO DE LLAMADAx1
t8 =  STACK[0] ;
printf("%d",(int)t8);
printf("%c",10);
//FIN DE PRINT
goto L4;
//FIN DE IF
L3:
//INICIO DE BOOLEANO
goto L10;

//FIN DE BOOLEANO
//INICIO DE ELSE
L10:

//INICIO DE PRINT
//INICIO DE STRING
t9=H;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=110;
H=H+1;
HEAP[(int)H]=117;
H=H+1;
HEAP[(int)H]=109;
H=H+1;
HEAP[(int)H]=101;
H=H+1;
HEAP[(int)H]=114;
H=H+1;
HEAP[(int)H]=111;
H=H+1;
HEAP[(int)H]=80;
H=H+1;
HEAP[(int)H]=97;
H=H+1;
HEAP[(int)H]=114;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=105;
H=H+1;
HEAP[(int)H]=110;
H=H+1;
HEAP[(int)H]=103;
H=H+1;
HEAP[(int)H]=114;
H=H+1;
HEAP[(int)H]=101;
H=H+1;
HEAP[(int)H]=115;
H=H+1;
HEAP[(int)H]=111;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=97;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=105;
H=H+1;
HEAP[(int)H]=102;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=102;
H=H+1;
HEAP[(int)H]=97;
H=H+1;
HEAP[(int)H]=108;
H=H+1;
HEAP[(int)H]=115;
H=H+1;
HEAP[(int)H]=111;
H=H+1;
HEAP[(int)H]=44;
H=H+1;
HEAP[(int)H]=32;
H=H+1;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t9==-1) goto L12;
P=P+1;
t10=P+1;
STACK[(int)t10] =t9;
proc_printString();
P=P-1;
goto L13;
L12:
L13:

//INICIO DE LLAMADAx1
t11 =  STACK[0] ;
printf("%d",(int)t11);
printf("%c",10);
//FIN DE PRINT
goto L4;
//FIN DE IF
L11:
//SALIDA DEL IF
L4:
return;
}
