#include <stdio.h>
#include <math.h>
float HEAP[82000];
float STACK[82000];
float P;
float H;
float t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44;

void proc_printInt(){
t10=P+1;//tipo
t11=P+2;//posicion en heap
t12=STACK[(int)t10];//TIPO
t13=STACK[(int)t11];//POSICION EN HEAP
t15=HEAP[(int)t13];
t18=t13+1;//POSICION DEL PRIMER ELEMENTO DEL VECTOR
t14=t12-1;//DISMINUCION DEL TIPO
t16=0;
printf("%c",91);
L0:
if(t16>=t15) goto L1;
t17=HEAP[(int)t18];
if (t14>0) goto L2;
printf("%d",(int)t17);
goto L3;
L2:
STACK[(int)t10]=t14;
STACK[(int)t11]=t17;
t19=STACK[81999];
t19=1+t19;
t20=81999-t19;
STACK[(int)t20]=t18;
t19=1+t19;
t20=81999-t19;
STACK[(int)t20]=t16;
t19=1+t19;
t20=81999-t19;
STACK[(int)t20]=t14;
t19=1+t19;
t20=81999-t19;
STACK[(int)t20]=t15;
STACK[81999]=t19;
proc_printInt();
t19=STACK[81999];
t20=81999-t19;
t19=t19-1;
t15=STACK[(int)t20];
t20=81999-t19;
t19=t19-1;
t14=STACK[(int)t20];
t20=81999-t19;
t19=t19-1;
t16=STACK[(int)t20];
t20=81999-t19;
t19=t19-1;
t18=STACK[(int)t20];
STACK[81999]=t19;
L3:
t18=t18+1;
t16=t16+1;
if (t16==t15) goto L1;
printf("%c",44);
goto L0;
L1:
printf("%c",93);
return;
}
 
void proc_printString(){
t23=P+1;
t24=STACK[(int)t23];
L6:
t25=HEAP[(int)t24];
if(t25!=-1) goto L7;
goto L8;
L7:
printf("%c",(int)t25);
t24=t24 + 1;
goto L6;
L8:
return;
}


void main(){
//CREANDO ARRAY CON LISTA DE VALORES
//CREANDO ARRAY CON LISTA DE VALORES
//CREANDO ARRAY CON LISTA DE VALORES
t0=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=4;
H=H+1;
HEAP[(int)H]=1;
H=H+1;
HEAP[(int)H]=3;
H=H+1;
HEAP[(int)H]=5;
H=H+1;
HEAP[(int)H]=7;
H=H+1;
//CREANDO ARRAY CON LISTA DE VALORES
t1=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=4;
H=H+1;
HEAP[(int)H]=9;
H=H+1;
HEAP[(int)H]=11;
H=H+1;
HEAP[(int)H]=13;
H=H+1;
HEAP[(int)H]=15;
H=H+1;
t2=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=2;
H=H+1;
HEAP[(int)H]=t0;
H=H+1;
HEAP[(int)H]=t1;
H=H+1;
//CREANDO ARRAY CON LISTA DE VALORES
//CREANDO ARRAY CON LISTA DE VALORES
t3=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=4;
H=H+1;
HEAP[(int)H]=2;
H=H+1;
HEAP[(int)H]=4;
H=H+1;
HEAP[(int)H]=6;
H=H+1;
HEAP[(int)H]=8;
H=H+1;
//CREANDO ARRAY CON LISTA DE VALORES
t4=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=4;
H=H+1;
HEAP[(int)H]=10;
H=H+1;
HEAP[(int)H]=12;
H=H+1;
HEAP[(int)H]=14;
H=H+1;
HEAP[(int)H]=16;
H=H+1;
t5=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=2;
H=H+1;
HEAP[(int)H]=t3;
H=H+1;
HEAP[(int)H]=t4;
H=H+1;
t6=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=2;
H=H+1;
HEAP[(int)H]=t2;
H=H+1;
HEAP[(int)H]=t5;
H=H+1;
//INICIO DE DECLARACION arr3
//INICIO DE PRINT
//INICIO DE LLAMADAarr3
t8=1+P;
t9=2+P;
STACK[(int)t8]=3;
STACK[(int)t9]=t6;
//IMPRIMIENDO ARRAY DE INT
proc_printInt();
//INICIO DE STRING
t21=H;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t21==-1) goto L4;
P=P+1;
t22=P+1;
STACK[(int)t22] =t21;
proc_printString();
P=P-1;
goto L5;
L4:
L5:

printf("%c",10);
//FIN DE PRINT
//INICIO DE LLAMADAarr3
//INICIO DE DECLARACION arr4
//INICIO DE LLAMADAarr3
//ACCEDIENDO A ELEMENTO 
//ACCEDIENDO A VALOR
t28=0+1;
t29=t28+t6;
t30=HEAP[(int)t29];
//ACCEDIENDO A VALOR
t31=0+1;
t32=t31+t30;
t33=HEAP[(int)t32];
//CREANDO ARRAY CON LISTA DE VALORES
t34=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=4;
H=H+1;
HEAP[(int)H]=61;
H=H+1;
HEAP[(int)H]=62;
H=H+1;
HEAP[(int)H]=63;
H=H+1;
HEAP[(int)H]=64;
H=H+1;
//INICIANDO LA ASIGNACION DE UN ARRAY O VECTOR
HEAP[(int)t32]=t34;
//FINALIZANDO LA ASIGNACION
//INICIO DE PRINT
//INICIO DE LLAMADAarr3
t36=1+P;
t37=2+P;
STACK[(int)t36]=3;
STACK[(int)t37]=t6;
//IMPRIMIENDO ARRAY DE INT
proc_printInt();
//INICIO DE STRING
t38=H;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t38==-1) goto L9;
P=P+1;
t39=P+1;
STACK[(int)t39] =t38;
proc_printString();
P=P-1;
goto L10;
L9:
L10:

printf("%c",10);
//FIN DE PRINT
//INICIO DE PRINT
//INICIO DE LLAMADAarr4
t41=1+P;
t42=2+P;
STACK[(int)t41]=3;
STACK[(int)t42]=t6;
//IMPRIMIENDO ARRAY DE INT
proc_printInt();
//INICIO DE STRING
t43=H;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t43==-1) goto L11;
P=P+1;
t44=P+1;
STACK[(int)t44] =t43;
proc_printString();
P=P-1;
goto L12;
L11:
L12:

printf("%c",10);
//FIN DE PRINT
return;
}
