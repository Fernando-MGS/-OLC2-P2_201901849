#include <stdio.h>
#include <math.h>
float HEAP[82000];
float STACK[82000];
float P;
float H;
float t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57;

void proc_extra_printTrue(){
printf("%c",116);
printf("%c",114);
printf("%c",117);
printf("%c",101);
return;
}

void proc_extra_printFalse(){
printf("%c",102);
printf("%c",97);
printf("%c",108);
printf("%c",115);
printf("%c",101);
return;
}


void proc_printString(){
t15=P+1;
t16=STACK[(int)t15];
L7:
t17=HEAP[(int)t16];
if(t17!=-1) goto L8;
goto L9;
L8:
printf("%c",(int)t17);
t16=t16 + 1;
goto L7;
L9:
return;
}


void main(){
//CREANDO ARRAY CON LISTA DE VALORES
t0=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=6;
H=H+1;
HEAP[(int)H]=1;
H=H+1;
HEAP[(int)H]=2;
H=H+1;
HEAP[(int)H]=3;
H=H+1;
HEAP[(int)H]=4;
H=H+1;
HEAP[(int)H]=5;
H=H+1;
HEAP[(int)H]=6;
H=H+1;
//INICIO DE DECLARACION arr
//CREANDO ARRAY CON LISTA DE VALORES
t1=H;//POS DE INICIO NEWARRAY
HEAP[(int)H]=6;
H=H+1;
HEAP[(int)H]=0;
H=H+1;
HEAP[(int)H]=1;
H=H+1;
HEAP[(int)H]=2;
H=H+1;
HEAP[(int)H]=3;
H=H+1;
HEAP[(int)H]=4;
H=H+1;
HEAP[(int)H]=5;
H=H+1;
t2=0;
t6=t1;
t3=HEAP[(int)t1];//DETERMINANDO EL LARGO DEL CONJUNTO
L0:
if (t2>=t3) goto L1;
t2=t2+1;//INCREMENTO DEL CONTADOR
t6=t6+1;//INCREMENTO DEL INDICE
t5=HEAP[(int)t6];
STACK[(int)t4]=t5;
//INICIO DE PRINT
//--------==
//INICIO DE LLAMADAarr
//ACCEDIENDO A ELEMENTO 
//INICIO DE LLAMADAi
t9 =  STACK[(int)t4] ;
//ACCEDIENDO A VALOR
t10=t9+1;
t11=t10+t0;
t12=HEAP[(int)t11];
if (t12==1) goto L2;
goto L3;

L2:
proc_extra_printTrue();
goto L4;
L3:
proc_extra_printFalse();
L4:

//INICIO DE STRING
t13=H;
HEAP[(int)H]=44;//,
H=H+1;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t13==-1) goto L5;
P=P+1;
t14=P+1;
STACK[(int)t14] =t13;
proc_printString();
P=P-1;
goto L6;
L5:
L6:

//--------==
//INICIO DE LLAMADAarr
//ACCEDIENDO A ELEMENTO 
//INICIO DE LLAMADAi
t20 =  STACK[(int)t4] ;
//ACCEDIENDO A VALOR
t21=t20+1;
t22=t21+t0;
t23=HEAP[(int)t22];
if (t23==2) goto L10;
goto L11;

L10:
proc_extra_printTrue();
goto L12;
L11:
proc_extra_printFalse();
L12:

//INICIO DE STRING
t24=H;
HEAP[(int)H]=44;//,
H=H+1;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t24==-1) goto L13;
P=P+1;
t25=P+1;
STACK[(int)t25] =t24;
proc_printString();
P=P-1;
goto L14;
L13:
L14:

//--------==
//INICIO DE LLAMADAarr
//ACCEDIENDO A ELEMENTO 
//INICIO DE LLAMADAi
t28 =  STACK[(int)t4] ;
//ACCEDIENDO A VALOR
t29=t28+1;
t30=t29+t0;
t31=HEAP[(int)t30];
if (t31==3) goto L15;
goto L16;

L15:
proc_extra_printTrue();
goto L17;
L16:
proc_extra_printFalse();
L17:

//INICIO DE STRING
t32=H;
HEAP[(int)H]=44;//,
H=H+1;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t32==-1) goto L18;
P=P+1;
t33=P+1;
STACK[(int)t33] =t32;
proc_printString();
P=P-1;
goto L19;
L18:
L19:

//--------==
//INICIO DE LLAMADAarr
//ACCEDIENDO A ELEMENTO 
//INICIO DE LLAMADAi
t36 =  STACK[(int)t4] ;
//ACCEDIENDO A VALOR
t37=t36+1;
t38=t37+t0;
t39=HEAP[(int)t38];
if (t39==4) goto L20;
goto L21;

L20:
proc_extra_printTrue();
goto L22;
L21:
proc_extra_printFalse();
L22:

//INICIO DE STRING
t40=H;
HEAP[(int)H]=44;//,
H=H+1;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t40==-1) goto L23;
P=P+1;
t41=P+1;
STACK[(int)t41] =t40;
proc_printString();
P=P-1;
goto L24;
L23:
L24:

//--------==
//INICIO DE LLAMADAarr
//ACCEDIENDO A ELEMENTO 
//INICIO DE LLAMADAi
t44 =  STACK[(int)t4] ;
//ACCEDIENDO A VALOR
t45=t44+1;
t46=t45+t0;
t47=HEAP[(int)t46];
if (t47==5) goto L25;
goto L26;

L25:
proc_extra_printTrue();
goto L27;
L26:
proc_extra_printFalse();
L27:

//INICIO DE STRING
t48=H;
HEAP[(int)H]=44;//,
H=H+1;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t48==-1) goto L28;
P=P+1;
t49=P+1;
STACK[(int)t49] =t48;
proc_printString();
P=P-1;
goto L29;
L28:
L29:

//--------==
//INICIO DE LLAMADAarr
//ACCEDIENDO A ELEMENTO 
//INICIO DE LLAMADAi
t52 =  STACK[(int)t4] ;
//ACCEDIENDO A VALOR
t53=t52+1;
t54=t53+t0;
t55=HEAP[(int)t54];
if (t55==6) goto L30;
goto L31;

L30:
proc_extra_printTrue();
goto L32;
L31:
proc_extra_printFalse();
L32:

//INICIO DE STRING
t56=H;
HEAP[(int)H]=-1;
H=H+1;
//FIN DE STRING
if (t56==-1) goto L33;
P=P+1;
t57=P+1;
STACK[(int)t57] =t56;
proc_printString();
P=P-1;
goto L34;
L33:
L34:

printf("%c",10);
//FIN DE PRINT
goto L0;
L1:
return;
}
